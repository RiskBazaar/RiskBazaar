{
  "name": "utf-8-validate",
  "version": "1.2.1",
  "description": "Validate UTF-8 for Web",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Only testing builds, test have to be extraced from `ws`\" && exit 0",
    "install": "prebuild --download",
    "prebuild": "prebuild --verbose"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/bitpay/utf-8-validate.git"
  },
  "keywords": [
    "utf-8-validate"
  ],
  "author": {
    "name": "Einar Otto Stangvik",
    "email": "einaros@gmail.com",
    "url": "http://2x.io"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/websockets/utf-8-validate/issues"
  },
  "homepage": "https://github.com/websockets/utf-8-validate",
  "dependencies": {
    "bindings": "1.2.x",
    "nan": "^2.0.5",
    "prebuild": "~2.3.3"
  },
  "gypfile": true,
  "gitHead": "8067ecff68899b9a1bb31d6906c80e1d5e88bcc7",
  "_id": "utf-8-validate@1.2.1",
  "_shasum": "1c6018bdc0a055a1f0cccf182f12211ed9b9d565",
  "_from": "bitpay/utf-8-validate#bitpay-v1.2.1",
  "_npmVersion": "2.9.1",
  "_nodeVersion": "0.12.3",
  "_npmUser": {
    "name": "3rdeden",
    "email": "npm@3rd-Eden.com"
  },
  "maintainers": [
    {
      "name": "einaros",
      "email": "einaros@gmail.com"
    },
    {
      "name": "3rdeden",
      "email": "npm@3rd-Eden.com"
    },
    {
      "name": "v1",
      "email": "info@3rd-Eden.com"
    }
  ],
  "dist": {
    "shasum": "44cb7c6eead73d6b40448f71f745904357b9f72c",
    "tarball": "http://registry.npmjs.org/utf-8-validate/-/utf-8-validate-1.2.1.tgz"
  },
  "directories": {},
  "_resolved": "git://github.com/bitpay/utf-8-validate.git#c82fc9c34fa14a79dd6d775f1389fcc190c33767",
  "readme": "# utf-8-validate\n\n[![Build Status](https://travis-ci.org/websockets/utf-8-validate.svg?branch=master)](https://travis-ci.org/websockets/utf-8-validate)\n\nWebSocket connections require extensive UTF-8 validation in order to confirm to\nthe specification. This was unfortunately not possible in JavaScript, hence the\nneed for a binary addon.\n\nAs the module consists of binary components, it should be used an\n`optionalDependency` so when installation fails, it doesn't halt the\ninstallation of your module. There are fallback files available in this\nrepository. See `fallback.js` for the suggest fallback implementation if\ninstallation fails. \n\n## Installation\n\n```\nnpm install utf-8-validate\n```\n\n## API\n\nIn all examples we assume that you've already required the mdoule as\nfollowed:\n\n```js\n'use strict';\n\nvar isValid = require('utf-8-validate').isValidUTF8;\n```\n\nThe module exposes 1 function:\n\n#### isValidUTF8\n\nValidate if the passed in buffer contains valid UTF-8 chars.\n\n```js\nbu.isValidUTF8(buffer);\n```\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md"
}
